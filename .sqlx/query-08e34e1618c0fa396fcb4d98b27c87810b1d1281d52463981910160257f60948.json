{
  "db_name": "SQLite",
  "query": "SELECT\n                ep.id                         as \"id!: Uuid\",\n                ep.task_attempt_id            as \"task_attempt_id!: Uuid\",\n                ep.after_head_commit          as after_head_commit,\n                prev.after_head_commit        as prev_after_head_commit,\n                ta.target_branch              as target_branch,\n                p.git_repo_path               as git_repo_path\n            FROM execution_processes ep\n            JOIN task_attempts ta ON ta.id = ep.task_attempt_id\n            JOIN tasks t ON t.id = ta.task_id\n            JOIN projects p ON p.id = t.project_id\n            LEFT JOIN execution_processes prev\n              ON prev.task_attempt_id = ep.task_attempt_id\n             AND prev.created_at = (\n                   SELECT max(created_at) FROM execution_processes\n                     WHERE task_attempt_id = ep.task_attempt_id\n                       AND created_at < ep.created_at\n               )\n            WHERE ep.before_head_commit IS NULL\n              AND ep.after_head_commit IS NOT NULL",
  "describe": {
    "columns": [
      {
        "name": "id!: Uuid",
        "ordinal": 0,
        "type_info": "Blob"
      },
      {
        "name": "task_attempt_id!: Uuid",
        "ordinal": 1,
        "type_info": "Blob"
      },
      {
        "name": "after_head_commit",
        "ordinal": 2,
        "type_info": "Text"
      },
      {
        "name": "prev_after_head_commit",
        "ordinal": 3,
        "type_info": "Text"
      },
      {
        "name": "target_branch",
        "ordinal": 4,
        "type_info": "Text"
      },
      {
        "name": "git_repo_path",
        "ordinal": 5,
        "type_info": "Text"
      }
    ],
    "parameters": {
      "Right": 0
    },
    "nullable": [
      true,
      false,
      true,
      true,
      false,
      false
    ]
  },
  "hash": "08e34e1618c0fa396fcb4d98b27c87810b1d1281d52463981910160257f60948"
}
